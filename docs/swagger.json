{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API endpoint documentation for the ChemistKe api project.",
        "title": "ChemistKe API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "ChemistKe Support",
            "url": "https://chemist.co.ke/support",
            "email": "Support@chemist.co.ke"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9090",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authservice.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/authservice.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/authservice.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/authservice.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/authservice.ErrResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.jwtCustomClaims"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/authservice.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authservice.ErrResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.jwtCustomClaims"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/authservice.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authservice.ErrResponse"
                        }
                    }
                }
            }
        },
        "/cms/authors": {
            "get": {
                "description": "lists all authors in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "lists all Authors.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Author Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new Author in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "Registers a new Author.",
                "parameters": [
                    {
                        "description": "Author to create",
                        "name": "author",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Author created Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an Author in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "Updates an Author.",
                "parameters": [
                    {
                        "description": "Author to update",
                        "name": "author",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Author updated Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/cms/authors/{id}": {
            "get": {
                "description": "Gets an author based on a provided id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "gets an Author.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Author Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "deletes an author based on a provided id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "deletes an Author.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fetched Author Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/cms/categories": {
            "get": {
                "description": "lists all categories in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "lists all categories.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PaginatedReq Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "PaginatedReq Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched categories Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new Category in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "Registers a new cateogory.",
                "parameters": [
                    {
                        "description": "Category to create",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Category"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Category"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a Category in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "Updates a cateogory.",
                "parameters": [
                    {
                        "description": "Category to create",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Category"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category updated Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Category"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/cms/categories/{id}": {
            "get": {
                "description": "Gets a Category from the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "Gets a cateogory.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category fetched Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Category"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a Category from the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "deletes a cateogory.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Category"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/cms/posts": {
            "get": {
                "description": "lists all posts in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "lists all Posts.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of Items to fetch",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Posts Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new Post in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "Registers a new post.",
                "parameters": [
                    {
                        "description": "Post to create",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Post"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post created Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Post"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a given post.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "updates a post.",
                "parameters": [
                    {
                        "description": "Post to create",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Post"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post updated Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Post"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/cms/posts/author": {
            "get": {
                "description": "lists all posts of an author in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "lists all Posts for a specific author.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "author_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of Items to fetch",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Posts Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/cms/posts/category": {
            "get": {
                "description": "lists all posts of a category in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "lists all Posts for a specific category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of Items to fetch",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Posts Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/cms/posts/get-by-author-category": {
            "get": {
                "description": "lists all posts of an author in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "lists all Posts for a specific author.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "author_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of Items to fetch",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Posts Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Author"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/cms/posts/{id}": {
            "get": {
                "description": "Gets a post from the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "Gets a Post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post fetched Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Post"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletets a post from the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content"
                ],
                "summary": "Deletets a Post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/routes.Post"
                        }
                    },
                    "400": {
                        "description": "invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get  orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PaginatedReq Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "PaginatedReq limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfly fetched orders",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create a new order.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "create an order in the system",
                "parameters": [
                    {
                        "description": "Oder info to create",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Order"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfly created a product",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update an order.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "update a given order",
                "parameters": [
                    {
                        "description": "Oder info to create",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Order"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Oder Successfly updated",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/orders/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get orders for a given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get a users' orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "PaginatedReq Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "PaginatedReq limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfly fetched user orders",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get an order by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Oder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfly fetched order",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Delete order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfly deleted order",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Get products based on page and limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PaginationRequest Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "PaginationRequest Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Creates a new Product",
                "parameters": [
                    {
                        "description": "Product information to create",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated product",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update a given product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update a  product",
                "parameters": [
                    {
                        "description": "Product information to create",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/products/get-products-by-brand": {
            "get": {
                "description": "Get products based on a given brand name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get products based on brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductReq Brand",
                        "name": "brand",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ProductReq Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ProductReq Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/products/get-products-by-category": {
            "get": {
                "description": "Get products based on a givne Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get products Based on a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductReq Category",
                        "name": "category",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ProductReq Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ProductReq Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/products/get-products-by-sub-category": {
            "get": {
                "description": "Get products based on a given sub-category, page, and limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get products based on a sub-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProductReq SubCategory",
                        "name": "sub-category",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ProductReq Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ProductReq Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/products/images/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload an image for a given product using multipart/form-data.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Upload a product image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product-id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of the image (e.g. thumbnail, banner, general)",
                        "name": "image-type",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully uploaded image",
                        "schema": {
                            "$ref": "#/definitions/product_proto.UploadProdctImagesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrResponse"
                        }
                    }
                }
            }
        },
        "/products/images/{id}": {
            "get": {
                "description": "Get the images of a given product id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "get a product's images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Get a product by product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a product based on a given id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PaginationRequest Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "PaginationRequest Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.GetUserResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new user to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User information to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created user",
                        "schema": {
                            "$ref": "#/definitions/routes.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "description": "User ID to delete",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.User"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully deleted user",
                        "schema": {
                            "$ref": "#/definitions/routes.DeleteUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user details",
                "parameters": [
                    {
                        "description": "Updated user information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/routes.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/get-user": {
            "get": {
                "description": "Get user details by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user",
                        "schema": {
                            "$ref": "#/definitions/routes.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/get-user-by-email": {
            "get": {
                "description": "Get user details by email address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user",
                        "schema": {
                            "$ref": "#/definitions/routes.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authservice.ErrResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Error message",
                    "type": "string",
                    "example": "invalid credentials"
                }
            }
        },
        "authservice.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "description": "User password",
                    "type": "string",
                    "example": "securepassword123"
                }
            }
        },
        "authservice.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "JWT authentication token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "jwt.NumericDate": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "product_proto.UploadProdctImagesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "routes.Author": {
            "type": "object",
            "required": [
                "bio",
                "user_id"
            ],
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://example.com/images/avatar.png"
                },
                "bio": {
                    "type": "string",
                    "example": "I like writing about meds"
                },
                "id": {
                    "type": "string",
                    "example": "42cef6ad-1b39-4708-aa3f-a0c485f70db3"
                },
                "url": {
                    "type": "string",
                    "example": "https://mywebsite.com"
                },
                "user_id": {
                    "type": "string",
                    "example": "42cef6ad-1b39-4708-aa3f-a0c485f70db3"
                }
            }
        },
        "routes.Category": {
            "type": "object",
            "required": [
                "description",
                "name",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "All you need to know about antibiotics"
                },
                "id": {
                    "type": "string",
                    "example": "42cef6ad-1b39-4708-aa3f-a0c485f70db3"
                },
                "name": {
                    "type": "string",
                    "example": "Antibiotics"
                },
                "slug": {
                    "type": "string",
                    "example": "antibiotics"
                }
            }
        },
        "routes.DeleteUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User deleted successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "routes.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "routes.GetUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jane.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "cef6ad-1b39-4708-aa3f-a0c485f70db3"
                },
                "name": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "phone": {
                    "type": "string",
                    "example": "+254722000000"
                },
                "role": {
                    "type": "string",
                    "example": "USER"
                }
            }
        },
        "routes.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "routes.Order": {
            "type": "object",
            "required": [
                "product_id",
                "quantity",
                "total",
                "user_id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "62e9e179-3aaa-4dd5-a098-21f20da10f90"
                },
                "product_id": {
                    "type": "string",
                    "example": "62e9e179-3aaa-4dd5-a098-21f20da10f90"
                },
                "quantity": {
                    "type": "integer",
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "example": "pending"
                },
                "total": {
                    "type": "number",
                    "example": 100
                },
                "user_id": {
                    "type": "string",
                    "example": "62e9e179-3aaa-4dd5-a098-21f20da10f90"
                }
            }
        },
        "routes.Post": {
            "type": "object",
            "required": [
                "author_id",
                "category_id",
                "content",
                "description",
                "slug",
                "status",
                "title"
            ],
            "properties": {
                "author_id": {
                    "type": "string",
                    "example": "42cef6ad-1b39-4708-aa3f-a0c485f70db3"
                },
                "category_id": {
                    "type": "string",
                    "example": "42cef6ad-1b39-4708-aa3f-a0c485f70db3"
                },
                "content": {
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "cover_image": {
                    "type": "string",
                    "example": "https://example.com/images/crypto-future.jpg"
                },
                "description": {
                    "type": "string",
                    "example": "10 benefits of ozempic"
                },
                "id": {
                    "type": "string",
                    "example": "1bf447b8-a129-42a2-b11e-684a801568ff"
                },
                "published_date": {
                    "type": "string",
                    "example": "2024-11-16 10:30:00"
                },
                "slug": {
                    "type": "string",
                    "example": "why-ozempic-is-good-for-you"
                },
                "status": {
                    "type": "string",
                    "example": "draft"
                },
                "title": {
                    "type": "string",
                    "example": "Why ozempic is good for you."
                },
                "updated_date": {
                    "type": "string",
                    "example": "2024-11-16 10:30:00"
                }
            }
        },
        "routes.Product": {
            "type": "object",
            "required": [
                "brand",
                "category",
                "description",
                "name",
                "price",
                "quantity",
                "sub-category"
            ],
            "properties": {
                "brand": {
                    "type": "string",
                    "example": "J\u0026J"
                },
                "category": {
                    "type": "string",
                    "example": "Antibiotics"
                },
                "description": {
                    "type": "string",
                    "example": "product description"
                },
                "id": {
                    "type": "string",
                    "example": "f183e73c-687d-44ad-83e6-636ecbb7a7d8"
                },
                "name": {
                    "type": "string",
                    "example": "Amoxilin"
                },
                "price": {
                    "type": "number",
                    "example": 300
                },
                "quantity": {
                    "type": "integer",
                    "example": 1000
                },
                "sub-category": {
                    "type": "string",
                    "example": "Mild"
                }
            }
        },
        "routes.User": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jane.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "42cef6ad-1b39-4708-aa3f-a0c485f70db3"
                },
                "name": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "password": {
                    "type": "string",
                    "example": "12345"
                },
                "phone": {
                    "type": "string",
                    "example": "+254722000000"
                },
                "role": {
                    "type": "string",
                    "example": "USER"
                }
            }
        },
        "utils.jwtCustomClaims": {
            "type": "object",
            "required": [
                "email",
                "name",
                "phone"
            ],
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "aud": {
                    "description": "the `aud` (Audience) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "author": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "exp": {
                    "description": "the `exp` (Expiration Time) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4",
                    "allOf": [
                        {
                            "$ref": "#/definitions/jwt.NumericDate"
                        }
                    ]
                },
                "iat": {
                    "description": "the `iat` (Issued At) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.6",
                    "allOf": [
                        {
                            "$ref": "#/definitions/jwt.NumericDate"
                        }
                    ]
                },
                "id": {
                    "type": "string"
                },
                "iss": {
                    "description": "the `iss` (Issuer) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.1",
                    "type": "string"
                },
                "jti": {
                    "description": "the `jti` (JWT ID) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.7",
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "nbf": {
                    "description": "the `nbf` (Not Before) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.5",
                    "allOf": [
                        {
                            "$ref": "#/definitions/jwt.NumericDate"
                        }
                    ]
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "sub": {
                    "description": "the `sub` (Subject) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.2",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}